name: terraform-branches

on:
  push:
    branches-ignore:
      - master

jobs:
  deploy:
    name: Deployment Dev
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.MYKEY }}
        aws-secret-access-key: ${{ secrets.MYSECRET }}
        aws-region: ap-southeast-2

    - name: Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: false

    - name: Apply  # could throw branch var here for paralell builds.
      run: |
        cd ./dev
        echo ${GITHUB_REF##*/}
        terraform init -migrate-state
        #  terraform init -backend-config key=bla -reconfigure for paralell state.
        terraform apply -auto-approve -var bucket_name=craigtfdev

    #optional teardown here re-deploy any long lived dev branch in prod workflow (after master merge)
